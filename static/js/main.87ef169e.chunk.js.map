{"version":3,"sources":["Statewise.js","App.js","reportWebVitals.js","index.js"],"names":["Statewise","useState","datas","setdata","search","setSearch","getCovidData","a","fetch","d","json","data","statewise","useEffect","className","type","placeholder","value","onChange","event","target","class","onClick","filter","cur","state","toLowerCase","includes","map","ind","confirmed","active","recovered","deaths","lastupdatedtime","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QA0EeA,EAxEC,WAEhB,MAAqBC,mBAAS,IAA9B,mBAAMC,EAAN,KAAYC,EAAZ,KACA,EAAwBF,mBAAS,IAAjC,mBAAMG,EAAN,KAAaC,EAAb,KAEUC,EAAY,uCAAC,8BAAAC,EAAA,sEAEDC,MAAM,0CAFL,cAETC,EAFS,gBAGEA,EAAEC,OAHJ,OAGTC,EAHS,OAIfR,EAAQQ,EAAKC,WAJE,2CAAD,qDAYlB,OALAC,qBAAU,WACVP,MACE,IAIC,sBAAKQ,UAAU,sBAAf,UACI,gCAAK,oBAAIA,UAAU,SAAd,sCACL,sBAAKA,UAAU,oBAAf,UACJ,uBAAOC,KAAK,OAAOD,UAAU,sDAAsDE,YAAY,sBAAsBC,MAAOb,EAAQc,SAAU,SAACC,GAASd,EAAUc,EAAMC,OAAOH,UAC/K,wBAAQI,MAAM,iDAAiDN,KAAK,QAAQE,MAAM,QAAQK,QAAS,SAACH,GAAD,OAASd,EAAU,KAAtH,SAA2H,sBAAMS,UAAU,MAAhB,iBAFvH,UAKCZ,EAAMqB,QAAO,SAACC,GACV,MAAW,IAARpB,GACKoB,EAAIC,MAAMC,cAAcC,SAASvB,EAAOsB,eAD1BF,OACjB,KAINI,KAAI,SAACJ,EAAIK,GACZ,MAAgB,qBAAZL,EAAIC,OAA0C,6CAAZD,EAAIC,MAG/B,iCACf,sBAAKX,UAAU,iFAAf,UACH,oBAAIA,UAAU,QAAd,SAAuBU,EAAIC,QACrB,sBAAKX,UAAU,MAAf,UACiB,qBAAIA,UAAU,mBAAd,wBAA6CU,EAAIM,aACjD,qBAAIhB,UAAU,mBAAd,qBAA0CU,EAAIO,UAC9C,qBAAIjB,UAAU,kBAAd,0BAA8CU,EAAIQ,aAClD,qBAAIlB,UAAU,iBAAd,qBAAwCU,EAAIS,UAC5C,+CAAkB,uBAAlB,IAA6BT,EAAIU,gBAAjC,eASR,iCACf,sBAAKpB,UAAU,gFAAf,UACH,oBAAIA,UAAU,OAAd,yBACA,sBAAKA,UAAU,MAAf,UACuB,qBAAIA,UAAU,kBAAd,wBAA4CU,EAAIM,aAChD,qBAAIhB,UAAU,iBAAd,qBAAwCU,EAAIO,UAC5C,qBAAIjB,UAAU,kBAAd,0BAA8CU,EAAIQ,aAClD,qBAAIlB,UAAU,gBAAd,qBAAuCU,EAAIS,UAC3C,+CAAkB,uBAAlB,IAA6BT,EAAIU,gBAAjC,sBC7CVC,G,MARL,WACR,OACE,cAAC,EAAD,MCCWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.87ef169e.chunk.js","sourcesContent":["import React,{useEffect,useState} from 'react';\r\nimport \"./s.css\";\r\nconst Statewise=()=>{\r\n\r\nconst[datas,setdata]=useState([]);\r\nconst[search,setSearch]=useState(\"\");\r\n\r\n    const getCovidData=async()=>{\r\n\r\n        const d=await fetch(\"https://api.covid19india.org/data.json\");\r\n        const data=await d.json();\r\n        setdata(data.statewise);\r\n       \r\n    }\r\n    useEffect(()=>{\r\n    getCovidData();\r\n    },[])\r\n\r\n\r\n    return( \r\n       <div className=\" tc justify-center \">\r\n           <div><h2 className=\"f1 pt4\">India Covid-19 Dashboard</h2>\r\n           <div className=\"tc justify-center\" >\r\n       <input type=\"text\" className=\"search-box mt2 mb2 pa1 ba b--green bg-lightest-blue\" placeholder=\"Enter a State or UT\" value={search} onChange={(event)=>{setSearch(event.target.value)}}></input>\r\n       <button class=\"btns ml--2 mt2 mb2 pa1 pr3 pl3 ba bg-dark-red \" type=\"reset\" value=\"Reset\" onClick={(event)=>setSearch(\"\")}><span className=\"t r\">X</span></button> </div></div>\r\n   \r\n        {\r\n            datas.filter((cur)=>{\r\n                if(search==\"\") return cur;\r\n                else if(cur.state.toLowerCase().includes(search.toLowerCase()))\r\n                {\r\n                    return cur;\r\n                }\r\n            }).map((cur,ind)=>{\r\n            if((cur.state!==\"State Unassigned\")&&(cur.state!==\"Dadra and Nagar Haveli and Daman and Diu\"))\r\n                return ( \r\n                 \r\n                       <scroll>\r\n        <div className=' overflow-auto height  w5 bg-washed-green br3 pa3 ma2 grow dib bw2 shadow-5 tc'>         \r\n     <h2 className=\"pt-2 \">{cur.state}</h2>\r\n           <div className=\"dib\">\r\n                            <h5 className=\"text-primary  a \">Confirmed: {cur.confirmed}</h5>\r\n                            <h5 className=\"text-secondary b\">Active: {cur.active}</h5>\r\n                            <h5 className=\"text-success c \">  Recovered: {cur.recovered}</h5>\r\n                            <h5 className=\"text-danger d \">Deaths: {cur.deaths}</h5>    \r\n                            <p >(Last Updated:<br></br> {cur.lastupdatedtime})</p>\r\n                            </div>\r\n                               </div>\r\n                               </scroll>  \r\n                                         \r\n                )\r\n\r\n                else \r\n                return ( \r\n                    <scroll>\r\n     <div className=' overflow-auto height w5 bg-washed-green br3 pa3 ma2 grow dib bw2 shadow-5 tc'>         \r\n  <h2 className=\"pt-2\">Daman & Diu</h2>\r\n  <div className=\"dib\">\r\n                         <h5 className=\"text-primary a \">Confirmed: {cur.confirmed}</h5>\r\n                         <h5 className=\"text-warning b\">Active: {cur.active}</h5>\r\n                         <h5 className=\"text-success  c\">  Recovered: {cur.recovered}</h5>\r\n                         <h5 className=\"text-danger d\">Deaths: {cur.deaths}</h5>    \r\n                         <p >(Last Updated:<br></br> {cur.lastupdatedtime})</p>\r\n                            </div></div>\r\n                            </scroll>                \r\n             )\r\n          })\r\n        \r\n        }               \r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Statewise;","\nimport './App.css';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\n\nimport React,{Component} from 'react';\nimport Statewise from './Statewise';\nimport 'tachyons'\n\n\nconst App=()=>{\n  return(\n    <Statewise/>\n  )\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}